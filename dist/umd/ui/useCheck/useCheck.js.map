{"version":3,"sources":["/Users/lixianjie/project/openSource/hooks/src/ui/useCheck/useCheck.ts"],"sourcesContent":["import {\n  FormLikeWithExtra,\n  useFn,\n  useFormState,\n  useSelf,\n  UseFormStateConfig,\n} from \"@m78/hooks\";\nimport { isArray } from \"@m78/utils\";\nimport _difference from \"lodash/difference\";\nimport { useMemo } from \"react\";\n\nexport interface UseCheckConf<T, OPTION>\n  extends FormLikeWithExtra<T[], OPTION[]>,\n    UseFormStateConfig {\n  /** 选项数组 */\n  options?: OPTION[];\n  /** 所有禁用值 */\n  disables?: T[];\n  /** 当option子项为对象类型时，传入此项来决定从该对象中取何值作为实际的选项值  */\n  collector?: (item: OPTION) => T;\n  /** 如果当前value包含在options中不存在的值，会触发此函数，用于从服务器或其他地方拉取不存在的选项 */\n  notExistValueTrigger?(val: T[]): void;\n}\n\n/** checked可以允许存在options中不存在的值， 所有选中, 局部选中都只针对传入选项中存在的值来确定 */\nexport interface UseCheckReturns<T, OPTION> {\n  /** 部分值被选中(只针对存在于options中的选项) */\n  partialChecked: boolean;\n  /** 是否全部选中(只针对存在于options中的选项) */\n  allChecked: boolean;\n  /** 没有任何值被选中 */\n\n  noneChecked: boolean;\n  /** 被选中值, 存在collector时所有check项都会先走collector */\n  checked: T[];\n  /** 被选中的原始值，不走collector，未传collector时与check表现一致 */\n  originalChecked: OPTION[];\n  /** 检测值是否被选中 */\n  isChecked: (val: T) => boolean;\n  /** 检测值是否被禁用 */\n  isDisabled: (val: T) => boolean;\n  /** 选中传入的值 */\n  check: (val: T) => void;\n  /** 取消选中传入的值 */\n  unCheck: (val: T) => void;\n  /** 选择全部值 */\n  checkAll: () => void;\n  /** 取消选中所有值 */\n  unCheckAll: () => void;\n  /** 反选, 返回反选后的值 */\n  toggle: (val: T) => boolean | undefined;\n  /** 反选所有值 */\n  toggleAll: () => void;\n  /** 一次性设置所有选中的值, 不影响禁用项 */\n  setChecked: (nextChecked: T[]) => void;\n  /** 指定值并设置其选中状态 */\n  setCheckBy: (val: T, isChecked: boolean) => void;\n  /** 以列表的形式添加选中项 */\n  checkList: (checkList: T[]) => void;\n  /** 以列表的形式移除选中项 */\n  unCheckList: (checkList: T[]) => void;\n}\n\nexport function useCheck<T, OPTION = T>(\n  conf: UseCheckConf<T, OPTION>\n): UseCheckReturns<T, OPTION> {\n  const { options = [], disables = [], collector, notExistValueTrigger } = conf;\n\n  /* ⚠ 用最少的循环实现功能，因为option可能包含巨量的数据 */\n  const self = useSelf({\n    /** 存放所有选项的字典 */\n    optMap: {} as { [key: string]: OPTION },\n    /** 存放所有已选值的字典 */\n    valMap: {} as { [key: string]: { v: T; o: OPTION } },\n    /** 存放checked中存在，但是options中不存在的值, used为是否已通过 */\n    notExistVal: {} as { [key: string]: { used: boolean; v: T } },\n  });\n\n  const triggerKey = conf.triggerKey || \"onChange\";\n\n  const [checked, setChecked] = useFormState<T[], OPTION[]>(\n    {\n      ...conf,\n      // 截获onChange并自定义更新逻辑\n      [triggerKey](val: T[]) {\n        // valMapSync(val); 强控制时在这里同步会有问题，统一转移到effect中\n        conf[triggerKey as \"onChange\"]?.(val, getCheckedOptions(val));\n      },\n    },\n    [],\n    {\n      ...conf,\n    }\n  );\n\n  /** 提取所有选项为基础类型值, 基础值数组操作更方便 */\n  const items = useMemo(() => {\n    return collector\n      ? options.map((item) => {\n          const v = collector(item);\n          self.optMap[String(v)] = item;\n          return collector(item);\n        })\n      : options.map<T>((item: any) => {\n          self.optMap[String(item)] = item;\n          return item;\n        });\n  }, [options]);\n\n  /** 初始化触发valMap */\n  useMemo(() => {\n    valMapSync(checked);\n  }, [checked]);\n\n  const isChecked = useFn((val: T) => {\n    const v: any = val;\n    return !!self.valMap[v] || !!self.notExistVal[v];\n  });\n\n  const isDisabled = useFn((val: T) => disables.includes(val));\n\n  const check = useFn((val: T) => {\n    if (isDisabled(val)) return;\n    if (!isChecked(val)) {\n      setChecked([...checked, val]);\n    }\n  });\n\n  const unCheck = useFn((val: T) => {\n    if (isDisabled(val)) return;\n    if (!isChecked(val)) return;\n    const index = checked.indexOf(val);\n    if (index !== -1) {\n      const temp = [...checked];\n      temp.splice(index, 1);\n      setChecked(temp);\n    }\n  });\n\n  const checkAll = useFn(() => {\n    // 只选中当前包含的选项\n    setChecked(getEnables());\n  });\n\n  const unCheckAll = useFn(() => {\n    setChecked(getEnables(false));\n  });\n\n  const toggle = useFn((val: T) => {\n    if (isDisabled(val)) return;\n\n    const _isC = isChecked(val);\n\n    if (!_isC) {\n      setChecked([...checked, val]);\n    } else {\n      const index = checked.indexOf(val);\n      const newArray = checked.slice();\n      newArray.splice(index, 1);\n      setChecked(newArray);\n    }\n    return !_isC;\n  });\n\n  const toggleAll = useFn(() => {\n    const reverse = items.filter((item) => {\n      const _isDisabled = isDisabled(item);\n      const _isChecked = isChecked(item);\n      if (_isDisabled) return _isChecked; // 如果禁用则返回、\n      return !_isChecked;\n    });\n    setChecked(reverse);\n  });\n\n  const checkList = useFn((list: T[]) => {\n    if (!isArray(list)) return;\n    if (!list.length) return;\n    // 排除禁用项和已选中项\n    const newList = list.filter((item) => {\n      if (isDisabled(item)) return false;\n      if (isChecked(item)) return false; // isChecked消耗比isDisabled高，所以用`||`判断\n      return true;\n    });\n\n    setChecked((prev) => [...prev, ...newList]);\n  });\n\n  const unCheckList = useFn((removeList: T[]) => {\n    if (!isArray(removeList)) return;\n    if (!removeList.length) return;\n    // 排除禁用项和未选中项\n    const rmList = removeList.filter((item) => {\n      if (isDisabled(item)) return false;\n      if (!isChecked(item)) return false;\n      return true;\n    });\n\n    setChecked((prev) => {\n      return _difference(prev, rmList);\n    });\n  });\n\n  const setCheck = useFn((nextChecked: T[]) => {\n    // 只选中列表中未被禁用的项\n    const extra = nextChecked.filter((item) => {\n      if (isDisabled(item)) {\n        return isChecked(item);\n      }\n      return true;\n    });\n    setChecked([...extra]);\n  });\n\n  const setCheckBy = useFn((val: T, _isChecked: boolean) => {\n    if (isDisabled(val)) return;\n    _isChecked ? check(val) : unCheck(val);\n  });\n\n  /** 获取可用选项，禁用项会以原样返回， 传入false时，返回所有未禁用项 */\n  function getEnables(isCheck = true) {\n    return items.filter((item) => {\n      const _isDisabled = isDisabled(item);\n      if (_isDisabled) {\n        return isChecked(item);\n      }\n      return isCheck;\n    });\n  }\n\n  /** 获取所有已选中的选项 */\n  function getCheckedOptions(_checked: T[]) {\n    if (!collector) return _checked as unknown as OPTION[];\n\n    const temp: OPTION[] = [];\n\n    _checked.forEach((item) => {\n      const c = self.optMap[String(item)];\n      if (c) {\n        temp.push(c);\n      }\n    });\n\n    return temp;\n  }\n\n  /** 判断是否局部选中, 是否所有选中 */\n  function getCheckStatus() {\n    let checkLen = 0;\n    const maxLength = items.length;\n    items.forEach((item) => {\n      if (isChecked(item)) {\n        checkLen++;\n      }\n    });\n    return {\n      /** 部分值被选中 */\n      partialChecked: checkLen > 0 && checkLen !== maxLength,\n      /** 是否全部选中 */\n      allChecked: checkLen === maxLength,\n    };\n  }\n\n  /** 同步valMap, 触发notExistVal  */\n  function valMapSync(_checked: T[]) {\n    if (!isArray(_checked)) return; // 在rc-form库中使用时，热更新会报错\n\n    const prevNotExits = { ...self.notExistVal };\n\n    self.valMap = {};\n    self.notExistVal = {};\n\n    _checked.forEach((item) => {\n      const strItem = String(item);\n\n      const c = self.optMap[strItem];\n\n      if (c) {\n        self.valMap[strItem] = {\n          v: item,\n          o: self.optMap[strItem],\n        };\n      } else {\n        const prev = prevNotExits[strItem];\n\n        self.notExistVal[strItem] = {\n          used: prev ? prev.used : false,\n          v: item,\n        };\n      }\n    });\n\n    // 通知选中但不存在的选项到notExistValueTrigger\n    if (notExistValueTrigger) {\n      const notOptionValues: T[] = [];\n\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      Object.entries(self.notExistVal).forEach(([_, v]) => {\n        if (!v.used) {\n          v.used = true;\n          notOptionValues.push(v.v);\n        }\n      });\n\n      notOptionValues.length && notExistValueTrigger(notOptionValues);\n    }\n  }\n\n  /**\n   * checked可以允许存在options中不存在的值， 所有选中, 局部选中都只针对传入选项来确定 */\n  return {\n    ...getCheckStatus(),\n    checked,\n    originalChecked: getCheckedOptions(checked),\n    noneChecked: checked.length === 0,\n    isChecked,\n    isDisabled,\n    check,\n    unCheck,\n    checkAll,\n    unCheckAll,\n    toggle,\n    toggleAll,\n    setChecked: setCheck,\n    setCheckBy,\n    checkList,\n    unCheckList,\n  };\n}\n"],"names":["useCheck","conf","getEnables","isCheck","items","filter","item","_isDisabled","isDisabled","isChecked","getCheckedOptions","_checked","collector","temp","forEach","c","self","optMap","String","push","getCheckStatus","checkLen","maxLength","length","partialChecked","allChecked","valMapSync","isArray","prevNotExits","notExistVal","valMap","strItem","v","o","prev","used","notExistValueTrigger","notOptionValues","Object","entries","_","options","disables","useSelf","triggerKey","useFormState","val","checked","setChecked","useMemo","map","useFn","includes","check","unCheck","index","indexOf","splice","checkAll","unCheckAll","toggle","_isC","newArray","slice","toggleAll","reverse","_isChecked","checkList","list","newList","unCheckList","removeList","rmList","_difference","setCheck","nextChecked","extra","setCheckBy","originalChecked","noneChecked"],"mappings":"AAAA;6ZAMO,YAAY,WACK,YAAY,WACZ,mBAAmB,WACnB,OAAO;;;;;;;;;QAHxB,YAAY;QACK,YAAY;QACZ,mBAAmB;QACnB,OAAO;;;;;;;;mCAsDfA,UAAQ;;;mBAARA,QAAQ;;;;;;;;;;IAAjB,SAASA,QAAQ,CACtBC,IAA6B,EACD;YA0JnBC,UAAU,GADnB,wCAAwC,GACxC,SAASA,UAAU,GAAiB;gBAAhBC,OAAO,GAAPA,+CAAc,kBAAJ,IAAI;YAChC,OAAOC,KAAK,CAACC,MAAM,CAAC,SAACC,IAAI,EAAK;gBAC5B,IAAMC,WAAW,GAAGC,UAAU,CAACF,IAAI,CAAC,AAAC;gBACrC,IAAIC,WAAW,EAAE;oBACf,OAAOE,SAAS,CAACH,IAAI,CAAC,CAAC;gBACzB,CAAC;gBACD,OAAOH,OAAO,CAAC;YACjB,CAAC,CAAC,CAAC;QACL,CAAC;YAGQO,iBAAiB,GAD1B,eAAe,GACf,SAASA,iBAAiB,CAACC,QAAa,EAAE;YACxC,IAAI,CAACC,SAAS,EAAE,OAAOD,QAAQ,CAAwB;YAEvD,IAAME,IAAI,GAAa,EAAE,AAAC;YAE1BF,QAAQ,CAACG,OAAO,CAAC,SAACR,IAAI,EAAK;gBACzB,IAAMS,CAAC,GAAGC,KAAI,CAACC,MAAM,CAACC,MAAM,CAACZ,IAAI,CAAC,CAAC,AAAC;gBACpC,IAAIS,CAAC,EAAE;oBACLF,IAAI,CAACM,IAAI,CAACJ,CAAC,CAAC,CAAC;gBACf,CAAC;YACH,CAAC,CAAC,CAAC;YAEH,OAAOF,IAAI,CAAC;QACd,CAAC;YAGQO,cAAc,GADvB,qBAAqB,GACrB,SAASA,cAAc,GAAG;YACxB,IAAIC,QAAQ,GAAG,CAAC,AAAC;YACjB,IAAMC,SAAS,GAAGlB,KAAK,CAACmB,MAAM,AAAC;YAC/BnB,KAAK,CAACU,OAAO,CAAC,SAACR,IAAI,EAAK;gBACtB,IAAIG,SAAS,CAACH,IAAI,CAAC,EAAE;oBACnBe,QAAQ,EAAE,CAAC;gBACb,CAAC;YACH,CAAC,CAAC,CAAC;YACH,OAAO;gBACL,WAAW,GACXG,cAAc,EAAEH,QAAQ,GAAG,CAAC,IAAIA,QAAQ,KAAKC,SAAS;gBACtD,WAAW,GACXG,UAAU,EAAEJ,QAAQ,KAAKC,SAAS;aACnC,CAAC;QACJ,CAAC;YAGQI,UAAU,GADnB,6BAA6B,GAC7B,SAASA,UAAU,CAACf,QAAa,EAAE;YACjC,IAAI,CAACgB,IAAAA,MAAO,QAAA,EAAChB,QAAQ,CAAC,EAAE,OAAO,CAAC,uBAAuB;YAEvD,IAAMiB,YAAY,GAAG,kBAAKZ,KAAI,CAACa,WAAW,CAAE,AAAC;YAE7Cb,KAAI,CAACc,MAAM,GAAG,EAAE,CAAC;YACjBd,KAAI,CAACa,WAAW,GAAG,EAAE,CAAC;YAEtBlB,QAAQ,CAACG,OAAO,CAAC,SAACR,IAAI,EAAK;gBACzB,IAAMyB,OAAO,GAAGb,MAAM,CAACZ,IAAI,CAAC,AAAC;gBAE7B,IAAMS,CAAC,GAAGC,KAAI,CAACC,MAAM,CAACc,OAAO,CAAC,AAAC;gBAE/B,IAAIhB,CAAC,EAAE;oBACLC,KAAI,CAACc,MAAM,CAACC,OAAO,CAAC,GAAG;wBACrBC,CAAC,EAAE1B,IAAI;wBACP2B,CAAC,EAAEjB,KAAI,CAACC,MAAM,CAACc,OAAO,CAAC;qBACxB,CAAC;gBACJ,OAAO;oBACL,IAAMG,IAAI,GAAGN,YAAY,CAACG,OAAO,CAAC,AAAC;oBAEnCf,KAAI,CAACa,WAAW,CAACE,OAAO,CAAC,GAAG;wBAC1BI,IAAI,EAAED,IAAI,GAAGA,IAAI,CAACC,IAAI,GAAG,KAAK;wBAC9BH,CAAC,EAAE1B,IAAI;qBACR,CAAC;gBACJ,CAAC;YACH,CAAC,CAAC,CAAC;YAEH,mCAAmC;YACnC,IAAI8B,oBAAoB,EAAE;gBACxB,IAAMC,eAAe,GAAQ,EAAE,AAAC;gBAEhC,6DAA6D;gBAC7DC,MAAM,CAACC,OAAO,CAACvB,KAAI,CAACa,WAAW,CAAC,CAACf,OAAO,CAAC,gBAAY;2DAAV0B,CAAC,YAAA,EAAER,CAAC,YAAA;oBAC7C,IAAI,CAACA,CAAC,CAACG,IAAI,EAAE;wBACXH,CAAC,CAACG,IAAI,GAAG,IAAI,CAAC;wBACdE,eAAe,CAAClB,IAAI,CAACa,CAAC,CAACA,CAAC,CAAC,CAAC;oBAC5B,CAAC;gBACH,CAAC,CAAC,CAAC;gBAEHK,eAAe,CAACd,MAAM,IAAIa,oBAAoB,CAACC,eAAe,CAAC,CAAC;YAClE,CAAC;QACH,CAAC;QA/OD,eAAyEpC,IAAI,CAArEwC,OAAO,EAAPA,OAAO,yBAAG,EAAE,WAAA,cAAqDxC,IAAI,CAAvDyC,QAAQ,EAARA,QAAQ,0BAAG,EAAE,YAAA,EAAE9B,SAAS,GAA2BX,IAAI,CAAxCW,SAAS,EAAEwB,oBAAoB,GAAKnC,IAAI,CAA7BmC,oBAAoB,AAAU;QAE9E,kCAAkC,GAClC,IAAMpB,KAAI,GAAG2B,IAAAA,MAAO,QAAA,EAAC;YACnB,cAAc,GACd1B,MAAM,EAAE,EAAE;YACV,eAAe,GACfa,MAAM,EAAE,EAAE;YACV,6CAA6C,GAC7CD,WAAW,EAAE,EAAE;SAChB,CAAC,AAAC;QAEH,IAAMe,UAAU,GAAG3C,IAAI,CAAC2C,UAAU,IAAI,UAAU,AAAC;QAEjD,IAA8BC,GAa7B,kBAb6BA,IAAAA,MAAY,aAAA,EACxC,qCACK5C,IAAI,GACP,qBAAqB;QACrB,oBAAC2C,UAAU,EAAX,SAAaE,GAAQ,EAAE;gBACrB,8CAA8C;YAC9C7C,GAA8B;YAA9BA,CAAAA,GAA8B,GAA9BA,IAAI,CAAC2C,UAAU,CAAe,cAA9B3C,GAA8B,WAA+B,GAA7DA,KAAAA,CAA6D,GAA7DA,GAA8B,CAA9BA,IAA6D,CAA7DA,IAAI,EAA6B6C,GAAG,EAAEpC,iBAAiB,CAACoC,GAAG,CAAC,CAAC,CAAC;QAChE,CAAC,CAAA,CACF,EACD,EAAE,EACF,kBACK7C,IAAI,CACR,CACF,IAAA,EAbM8C,OAAO,GAAgBF,GAa7B,GAba,EAAEG,UAAU,GAAIH,GAa7B,GAbyB,AAaxB;QAEF,6BAA6B,GAC7B,IAAMzC,KAAK,GAAG6C,IAAAA,MAAO,QAAA,EAAC,WAAM;YAC1B,OAAOrC,SAAS,GACZ6B,OAAO,CAACS,GAAG,CAAC,SAAC5C,IAAI,EAAK;gBACpB,IAAM0B,CAAC,GAAGpB,SAAS,CAACN,IAAI,CAAC,AAAC;gBAC1BU,KAAI,CAACC,MAAM,CAACC,MAAM,CAACc,CAAC,CAAC,CAAC,GAAG1B,IAAI,CAAC;gBAC9B,OAAOM,SAAS,CAACN,IAAI,CAAC,CAAC;YACzB,CAAC,CAAC,GACFmC,OAAO,CAACS,GAAG,CAAI,SAAC5C,IAAS,EAAK;gBAC5BU,KAAI,CAACC,MAAM,CAACC,MAAM,CAACZ,IAAI,CAAC,CAAC,GAAGA,IAAI,CAAC;gBACjC,OAAOA,IAAI,CAAC;YACd,CAAC,CAAC,CAAC;QACT,CAAC,EAAE;YAACmC,OAAO;SAAC,CAAC,AAAC;QAEd,gBAAgB,GAChBQ,IAAAA,MAAO,QAAA,EAAC,WAAM;YACZvB,UAAU,CAACqB,OAAO,CAAC,CAAC;QACtB,CAAC,EAAE;YAACA,OAAO;SAAC,CAAC,CAAC;QAEd,IAAMtC,SAAS,GAAG0C,IAAAA,MAAK,MAAA,EAAC,SAACL,GAAM,EAAK;YAClC,IAAMd,CAAC,GAAQc,GAAG,AAAC;YACnB,OAAO,CAAC,CAAC9B,KAAI,CAACc,MAAM,CAACE,CAAC,CAAC,IAAI,CAAC,CAAChB,KAAI,CAACa,WAAW,CAACG,CAAC,CAAC,CAAC;QACnD,CAAC,CAAC,AAAC;QAEH,IAAMxB,UAAU,GAAG2C,IAAAA,MAAK,MAAA,EAAC,SAACL,GAAM;mBAAKJ,QAAQ,CAACU,QAAQ,CAACN,GAAG,CAAC;SAAA,CAAC,AAAC;QAE7D,IAAMO,KAAK,GAAGF,IAAAA,MAAK,MAAA,EAAC,SAACL,GAAM,EAAK;YAC9B,IAAItC,UAAU,CAACsC,GAAG,CAAC,EAAE,OAAO;YAC5B,IAAI,CAACrC,SAAS,CAACqC,GAAG,CAAC,EAAE;gBACnBE,UAAU,CAAC,AAAC,mBAAGD,OAAO,CAAPA,QAAJ;oBAAaD,GAAG;iBAAC,CAAA,CAAC,CAAC;YAChC,CAAC;QACH,CAAC,CAAC,AAAC;QAEH,IAAMQ,OAAO,GAAGH,IAAAA,MAAK,MAAA,EAAC,SAACL,GAAM,EAAK;YAChC,IAAItC,UAAU,CAACsC,GAAG,CAAC,EAAE,OAAO;YAC5B,IAAI,CAACrC,SAAS,CAACqC,GAAG,CAAC,EAAE,OAAO;YAC5B,IAAMS,KAAK,GAAGR,OAAO,CAACS,OAAO,CAACV,GAAG,CAAC,AAAC;YACnC,IAAIS,KAAK,KAAK,CAAC,CAAC,EAAE;gBAChB,IAAM1C,IAAI,GAAI,mBAAGkC,OAAO,CAAPA,AAAQ,AAAC;gBAC1BlC,IAAI,CAAC4C,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC,CAAC;gBACtBP,UAAU,CAACnC,IAAI,CAAC,CAAC;YACnB,CAAC;QACH,CAAC,CAAC,AAAC;QAEH,IAAM6C,QAAQ,GAAGP,IAAAA,MAAK,MAAA,EAAC,WAAM;YAC3B,aAAa;YACbH,UAAU,CAAC9C,UAAU,EAAE,CAAC,CAAC;QAC3B,CAAC,CAAC,AAAC;QAEH,IAAMyD,UAAU,GAAGR,IAAAA,MAAK,MAAA,EAAC,WAAM;YAC7BH,UAAU,CAAC9C,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;QAChC,CAAC,CAAC,AAAC;QAEH,IAAM0D,MAAM,GAAGT,IAAAA,MAAK,MAAA,EAAC,SAACL,GAAM,EAAK;YAC/B,IAAItC,UAAU,CAACsC,GAAG,CAAC,EAAE,OAAO;YAE5B,IAAMe,IAAI,GAAGpD,SAAS,CAACqC,GAAG,CAAC,AAAC;YAE5B,IAAI,CAACe,IAAI,EAAE;gBACTb,UAAU,CAAC,AAAC,mBAAGD,OAAO,CAAPA,QAAJ;oBAAaD,GAAG;iBAAC,CAAA,CAAC,CAAC;YAChC,OAAO;gBACL,IAAMS,KAAK,GAAGR,OAAO,CAACS,OAAO,CAACV,GAAG,CAAC,AAAC;gBACnC,IAAMgB,QAAQ,GAAGf,OAAO,CAACgB,KAAK,EAAE,AAAC;gBACjCD,QAAQ,CAACL,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC,CAAC;gBAC1BP,UAAU,CAACc,QAAQ,CAAC,CAAC;YACvB,CAAC;YACD,OAAO,CAACD,IAAI,CAAC;QACf,CAAC,CAAC,AAAC;QAEH,IAAMG,SAAS,GAAGb,IAAAA,MAAK,MAAA,EAAC,WAAM;YAC5B,IAAMc,OAAO,GAAG7D,KAAK,CAACC,MAAM,CAAC,SAACC,IAAI,EAAK;gBACrC,IAAMC,WAAW,GAAGC,UAAU,CAACF,IAAI,CAAC,AAAC;gBACrC,IAAM4D,UAAU,GAAGzD,SAAS,CAACH,IAAI,CAAC,AAAC;gBACnC,IAAIC,WAAW,EAAE,OAAO2D,UAAU,CAAC,CAAC,WAAW;gBAC/C,OAAO,CAACA,UAAU,CAAC;YACrB,CAAC,CAAC,AAAC;YACHlB,UAAU,CAACiB,OAAO,CAAC,CAAC;QACtB,CAAC,CAAC,AAAC;QAEH,IAAME,SAAS,GAAGhB,IAAAA,MAAK,MAAA,EAAC,SAACiB,IAAS,EAAK;YACrC,IAAI,CAACzC,IAAAA,MAAO,QAAA,EAACyC,IAAI,CAAC,EAAE,OAAO;YAC3B,IAAI,CAACA,IAAI,CAAC7C,MAAM,EAAE,OAAO;YACzB,aAAa;YACb,IAAM8C,OAAO,GAAGD,IAAI,CAAC/D,MAAM,CAAC,SAACC,IAAI,EAAK;gBACpC,IAAIE,UAAU,CAACF,IAAI,CAAC,EAAE,OAAO,KAAK,CAAC;gBACnC,IAAIG,SAAS,CAACH,IAAI,CAAC,EAAE,OAAO,KAAK,CAAC,CAAC,oCAAoC;gBACvE,OAAO,IAAI,CAAC;YACd,CAAC,CAAC,AAAC;YAEH0C,UAAU,CAAC,SAACd,IAAI;uBAAK,AAAC,mBAAGA,IAAI,CAAJA,QAAM,mBAAGmC,OAAO,CAAPA,CAAQ;aAAA,CAAC,CAAC;QAC9C,CAAC,CAAC,AAAC;QAEH,IAAMC,WAAW,GAAGnB,IAAAA,MAAK,MAAA,EAAC,SAACoB,UAAe,EAAK;YAC7C,IAAI,CAAC5C,IAAAA,MAAO,QAAA,EAAC4C,UAAU,CAAC,EAAE,OAAO;YACjC,IAAI,CAACA,UAAU,CAAChD,MAAM,EAAE,OAAO;YAC/B,aAAa;YACb,IAAMiD,MAAM,GAAGD,UAAU,CAAClE,MAAM,CAAC,SAACC,IAAI,EAAK;gBACzC,IAAIE,UAAU,CAACF,IAAI,CAAC,EAAE,OAAO,KAAK,CAAC;gBACnC,IAAI,CAACG,SAAS,CAACH,IAAI,CAAC,EAAE,OAAO,KAAK,CAAC;gBACnC,OAAO,IAAI,CAAC;YACd,CAAC,CAAC,AAAC;YAEH0C,UAAU,CAAC,SAACd,IAAI,EAAK;gBACnB,OAAOuC,IAAAA,WAAW,QAAA,EAACvC,IAAI,EAAEsC,MAAM,CAAC,CAAC;YACnC,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,AAAC;QAEH,IAAME,QAAQ,GAAGvB,IAAAA,MAAK,MAAA,EAAC,SAACwB,WAAgB,EAAK;YAC3C,eAAe;YACf,IAAMC,KAAK,GAAGD,WAAW,CAACtE,MAAM,CAAC,SAACC,IAAI,EAAK;gBACzC,IAAIE,UAAU,CAACF,IAAI,CAAC,EAAE;oBACpB,OAAOG,SAAS,CAACH,IAAI,CAAC,CAAC;gBACzB,CAAC;gBACD,OAAO,IAAI,CAAC;YACd,CAAC,CAAC,AAAC;YACH0C,UAAU,CAAE,mBAAG4B,KAAK,CAALA,CAAO,CAAC;QACzB,CAAC,CAAC,AAAC;QAEH,IAAMC,UAAU,GAAG1B,IAAAA,MAAK,MAAA,EAAC,SAACL,GAAM,EAAEoB,UAAmB,EAAK;YACxD,IAAI1D,UAAU,CAACsC,GAAG,CAAC,EAAE,OAAO;YAC5BoB,UAAU,GAAGb,KAAK,CAACP,GAAG,CAAC,GAAGQ,OAAO,CAACR,GAAG,CAAC,CAAC;QACzC,CAAC,CAAC,AAAC;QA2FH;uDACqD,GACrD,OAAO,qCACF1B,cAAc,EAAE;YACnB2B,OAAO,EAAPA,OAAO;YACP+B,eAAe,EAAEpE,iBAAiB,CAACqC,OAAO,CAAC;YAC3CgC,WAAW,EAAEhC,OAAO,CAACxB,MAAM,KAAK,CAAC;YACjCd,SAAS,EAATA,SAAS;YACTD,UAAU,EAAVA,UAAU;YACV6C,KAAK,EAALA,KAAK;YACLC,OAAO,EAAPA,OAAO;YACPI,QAAQ,EAARA,QAAQ;YACRC,UAAU,EAAVA,UAAU;YACVC,MAAM,EAANA,MAAM;YACNI,SAAS,EAATA,SAAS;YACThB,UAAU,EAAE0B,QAAQ;YACpBG,UAAU,EAAVA,UAAU;YACVV,SAAS,EAATA,SAAS;YACTG,WAAW,EAAXA,WAAW;UACZ,CAAC;IACJ,CAAC"}
{"version":3,"sources":["/Users/lixianjie/project/openSource/hooks/src/effect/useFetch/useFetch.ts"],"sourcesContent":["import { __GLOBAL__, isEmpty, isFunction, isObject } from \"@m78/utils\";\nimport _debounce from \"lodash/debounce\";\nimport _throttle from \"lodash/throttle\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  useEffectEqual,\n  useFn,\n  useSelf,\n  useSetState,\n  useStorageState,\n  SetStateBase,\n} from \"@m78/hooks\";\n\nconst GLOBAL = __GLOBAL__ as Window;\n\n/* TODO: 自动重试、窗口聚焦、失焦 */\n\ninterface UseFetchOptions<Data, Payload> {\n  /** [] | 类似useEffect(fn, deps)，当依赖数组内的值发生改变时，会以当前参数进行更新请求, 请勿传入未memo的引用类型值 */\n  deps?: any[];\n  /** 传递给请求函数的参数, 当发生改变时，会以新值发起调用请求。传递此项时，Payload会被忽略。与payload共用Payload类型 */\n  param?: Payload;\n  /** false | 只能通过send来触发请求 */\n  manual?: boolean;\n  /** 10000 | 超时时间 ms */\n  timeout?: number;\n  /** true | 只有为true时才会发起请求, 可以用来实现串联请求 */\n  pass?: boolean;\n  /** 初始data */\n  initData?: (() => Data) | Data;\n  /** 初始payload, 在不存在param配置时，作为参数传递给请求方法 */\n  initPayload?: (() => Payload) | Payload;\n  /** 成功回调, 当为更新请求(通过无参调用send、deps等配置发起请求)时，isUpdate为true */\n  onSuccess?: (result: Data, isUpdate: boolean) => void;\n  /** 错误回调， error为请求函数中抛出的错误 */\n  onError?: (error: any) => void;\n  /** 无论成功与否都会调用。在旧的请求被新的请求覆盖掉时，不会触发。 */\n  onComplete?: () => void;\n  /** 请求超时的回调 */\n  onTimeout?: () => void;\n  /** 用于缓存的key，传递后，会将(payload, data, arg)缓存到session中，下次加载时将读取缓存数据作为初始值 */\n  cacheKey?: string;\n  /** true | 当传入了cacheKey且存在缓存数据时，是否进行swr(stale-while-revalidate)请求 */\n  stale?: boolean;\n  /** 节流间隔时间，传入时，开启节流, 只有初始化时的配置会生效 */\n  throttleInterval?: number;\n  /** 防抖间隔时间，传入时，开启防抖, 只有初始化时的配置会生效, 当存在throttleInterval时，此配置不会生效 */\n  debounceInterval?: number;\n  /** 轮询间隔, 大于500时生效 */\n  pollingInterval?: number;\n}\n\ninterface UseFetchReturns<Data, Payload> {\n  /** 是否正在请求 */\n  loading: boolean;\n  /** method方法reject时，error为它reject的值。 */\n  error: any;\n  /** 请求超时设置为true */\n  timeout: boolean;\n  /** method方法resolve的值或initData */\n  data: Data;\n  /** 当前用于请求的payload或initPayload */\n  payload: Payload;\n  /** 当前用于请求的param */\n  param: Payload;\n  /** 设置当前的data */\n  setData: SetStateBase<Data>;\n  /** 取消请求 */\n  cancel: () => void;\n  /** 轮询的开关状态，轮询还依赖于pollingInterval配置，只有两者同时有效时才会开启轮询 */\n  polling: boolean;\n  /** 设置轮询状态 */\n  setPolling(patch: boolean | ((prev: boolean) => boolean)): void;\n  /**\n   * 根据参数类型不同，会有不同效果:\n   * - 带参数: 以新的payload发起请求并设置payload\n   * - 无参数/参数为合成事件: 以当前参数发起更新请求\n   * - 传入了param配置项: 当存在param配置，一律视为更新并以当前param的值发起更新. 此时，传入的payload会被忽略\n   *\n   * 返回错误优先的Promise:\n   * - 如果该次请求有效，返回一个必定resolve数组[err, res]的Promise，err为reject的结果(不为null说明该次请求发生了错误)，res为resolve的结果\n   * - 如果请求被pass等阻断，返回数组的第一线会是一个错误对象\n   * */\n  send: (\n    newPayload?:\n      | Payload\n      | React.SyntheticEvent\n      | undefined /* SyntheticEvent是为了直接将send绑定给onClick等时不出现类型错误 */\n  ) => Promise<[any, Data]>;\n}\n\n/** 简单的判断是否为合成事件 */\nfunction isSyntheticEvent(arg: any) {\n  if (!arg) return false;\n\n  return (\n    isObject(arg) && \"nativeEvent\" in arg && \"target\" in arg && \"type\" in arg\n  );\n}\n\nfunction useFetch<Data = any, Payload = any>(\n  /** 一个Promise return函数或async函数, 当不为函数时不会走请求流程 */\n  method?: ((...arg: any[]) => Promise<Data>) | any,\n  /** 配置项 */\n  options = {} as UseFetchOptions<Data, Payload>\n) {\n  const self = useSelf({\n    /** 请求的唯一标示，在每一次请求开始前更新，并作为请求有效性的凭据 */\n    fetchID: 0,\n    /** 完成请求次数 */\n    fetchCount: 0,\n    /** 超时计时器 */\n    timeoutTimer: 0,\n    /** 处理轮询状态 */\n    lastFetch: Date.now(),\n  });\n  const {\n    initData,\n    initPayload,\n    deps = [],\n    param,\n    manual = false,\n    timeout = 10000,\n    onSuccess,\n    onError,\n    onComplete,\n    onTimeout,\n    cacheKey,\n    stale = true,\n    throttleInterval,\n    debounceInterval,\n    pollingInterval,\n    pass: aPass = true,\n  } = options;\n\n  const isCache = !!cacheKey; // 包含用于缓存的key并且非isPost时，缓存才会生效\n\n  const pass = aPass && isFunction(method);\n\n  const [state, setState] = useSetState({\n    loading: !manual && pass,\n    error: undefined as any,\n    timeout: false,\n  });\n\n  // 防止卸载后赋值\n  useEffect(() => {\n    return () => {\n      self.fetchID = 0; // 超时后阻止后续赋值操作\n      self.timeoutTimer && GLOBAL.clearTimeout(self.timeoutTimer);\n    };\n  }, []);\n\n  const [payload, setPayload] = useStorageState(\n    `${cacheKey}_FETCH_PAYLOAD`,\n    initPayload,\n    {\n      disabled: !isCache,\n    }\n  );\n\n  const [data, setData] = useStorageState(`${cacheKey}_FETCH_DATA`, initData, {\n    disabled: !isCache,\n  });\n\n  const [polling, setPolling] = useState(true);\n\n  const fetchHandel = useFn(\n    async function _fetchHandel(args: any, isUpdate = false) {\n      if (!pass) {\n        return [new Error(\"the request has been ignored\"), null];\n      }\n\n      self.lastFetch = Date.now();\n\n      const cID = Math.random();\n      self.fetchID = cID;\n\n      // 清除上一个计时器\n      self.timeoutTimer && GLOBAL.clearTimeout(self.timeoutTimer);\n      self.timeoutTimer = GLOBAL.setTimeout(() => {\n        cancel();\n        onTimeout?.();\n        setState({\n          ...getResetState(\"timeout\", true),\n        });\n      }, timeout);\n\n      // 记录当前计时器\n      const cTimeoutTimer = self.timeoutTimer;\n\n      // 减少更新次数\n      if (!state.loading) {\n        setState({\n          ...getResetState(\"loading\", true),\n        });\n      }\n\n      try {\n        const res = await method(args);\n        if (cID === self.fetchID) {\n          setState({\n            ...getResetState(\"loading\", false),\n          });\n          setData(res);\n          onSuccess?.(res, isUpdate);\n          return [undefined, res];\n        }\n      } catch (err) {\n        if (cID === self.fetchID) {\n          setState({\n            ...getResetState(\"error\", err),\n          });\n          onError?.(err);\n          return [err, undefined];\n        }\n      } finally {\n        // 清理当前计时器\n        cTimeoutTimer && GLOBAL.clearTimeout(cTimeoutTimer);\n\n        if (cID === self.fetchID) {\n          onComplete?.();\n          self.fetchCount++;\n        }\n      }\n\n      // 仅用于保证类型正确\n      return [new Error(\"never execute\"), null];\n    },\n    (fn) => {\n      if (throttleInterval) {\n        return _throttle(fn, throttleInterval, { trailing: false }); // 对于请求，应该禁止尾随调用\n      }\n\n      if (debounceInterval) {\n        return _debounce(fn, debounceInterval);\n      }\n\n      return fn as any;\n    }\n  );\n\n  /** 手动发起请求 */\n  const send = useFn((newPayload?: Payload) => {\n    const isUpdate = isSyntheticEvent(newPayload) || newPayload === undefined;\n    return fetchHandel(getActualPayload(newPayload), isUpdate);\n  });\n\n  /** 监听param改变并执行缓存更新，发起请求 */\n  useEffectEqual(() => {\n    if (!(\"param\" in options)) return;\n    if (self.fetchCount === 0 || manual) return;\n    fetchHandel(getActualPayload(), false); // 走到这里说明参数已经改变了\n  }, [param]);\n\n  /** 执行一些自动触发请求的操作 */\n  useEffect(() => {\n    if (manual || !pass) return;\n    // 初次请求时，如果有数据且禁用了stale，取消请求\n    if (!stale && self.fetchCount === 0 && !isEmpty(data)) {\n      setState({\n        loading: false,\n      });\n      return;\n    }\n    fetchHandel(getActualPayload(), self.fetchCount !== 0);\n  }, [pass, ...deps]);\n\n  /** 轮询处理 */\n  useEffect(\n    function intervalHandle() {\n      let timer: number;\n\n      if (polling && pollingInterval && pollingInterval > 500) {\n        timer = GLOBAL.setInterval(() => {\n          const now = Date.now();\n          const last = self.lastFetch;\n          const reFetch = now - last >= pollingInterval;\n          reFetch && send();\n        }, pollingInterval);\n      }\n\n      return () => {\n        timer && clearInterval(timer);\n      };\n    },\n    [pollingInterval, polling]\n  );\n\n  /** 接受可选的新payload，并根据条件返回传递给fetchHandel的参数(使用param或payload) */\n  function getActualPayload(newPayload?: Payload) {\n    // 包含param配置项，使用当前param更新\n    if (\"param\" in options) {\n      return param;\n    }\n\n    // 参数为合成事件或未传，视为更新请求，使用当前payload进行更新请求\n    if (isSyntheticEvent(newPayload) || newPayload === undefined) {\n      return payload;\n    }\n\n    // 包含新的payload，更新payload值并使用新的payload更新请求\n    setPayload(newPayload as Payload); // 同步新的payload\n    return newPayload;\n  }\n\n  /** 返回一个将互斥的状态还原的对象，并通过键值覆盖设置某个值 */\n  function getResetState(key?: string, value?: any) {\n    const resetState: any = {\n      loading: false,\n      error: undefined,\n      timeout: false,\n    };\n\n    if (key) {\n      resetState[key] = value;\n    }\n\n    return resetState;\n  }\n\n  /** 取消请求 */\n  function cancel() {\n    self.fetchID = 0; // 超时后阻止后续赋值操作\n    self.timeoutTimer && GLOBAL.clearTimeout(self.timeoutTimer);\n    setState({\n      loading: false,\n    });\n  }\n\n  return {\n    ...state,\n    send,\n    data,\n    payload,\n    param,\n    setData,\n    cancel,\n    polling,\n    setPolling,\n  } as any as UseFetchReturns<Data, Payload>;\n}\n\nexport { useFetch };\n"],"names":["useFetch","GLOBAL","__GLOBAL__","isSyntheticEvent","arg","isObject","method","options","getActualPayload","newPayload","param","undefined","payload","setPayload","getResetState","key","value","resetState","loading","error","timeout","cancel","self","fetchID","timeoutTimer","clearTimeout","setState","useSelf","fetchCount","lastFetch","Date","now","initData","initPayload","deps","manual","onSuccess","onError","onComplete","onTimeout","cacheKey","stale","throttleInterval","debounceInterval","pollingInterval","aPass","pass","isCache","isFunction","useSetState","state","useEffect","useStorageState","disabled","data","setData","useState","polling","setPolling","fetchHandel","useFn","_fetchHandel","args","isUpdate","cID","cTimeoutTimer","res","err","Error","Math","random","setTimeout","fn","_throttle","trailing","_debounce","send","useEffectEqual","isEmpty","intervalHandle","timer","setInterval","last","reFetch","clearInterval"],"mappings":"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"}
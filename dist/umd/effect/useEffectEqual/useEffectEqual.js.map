{"version":3,"sources":["/Users/lixianjie/project/openSource/hooks/src/effect/useEffectEqual/useEffectEqual.ts"],"sourcesContent":["import React, { useEffect, useMemo, useRef } from \"react\";\nimport { usePrev } from \"@m78/hooks\";\nimport _isEqualWith from \"lodash/isEqualWith\";\nimport { IsEqualCustomizer } from \"lodash\";\n\n/**\n *  支持对deps进行深度对比的`useEffect`\n *  💡保持deps值结构相对简单能够减少对比深度，从而提高性能\n *  @param effect - 同useEffect参数1\n *  @param deps - 依赖数组，用法与useEffect一致，但是会对dep项执行深对比\n *  @param customizer - 可以通过此函数自定义对比方式, 如果相等返回 true，否则返回 false, 返回undefined时使用默认对比方式\n * */\nexport function useEffectEqual(\n  effect: React.EffectCallback,\n  deps?: any[],\n  customizer?: IsEqualCustomizer\n) {\n  const prev = usePrev(deps);\n  const dep = useRef(0);\n\n  const isEqual = useMemo(() => _isEqualWith(deps, prev, customizer), [deps]);\n\n  if (!isEqual) {\n    dep.current++;\n  }\n\n  useEffect(effect, [dep.current]);\n}\n"],"names":["useEffectEqual","effect","deps","customizer","prev","usePrev","dep","useRef","isEqual","useMemo","_isEqualWith","current","useEffect"],"mappings":"AAAA;wNAAkD,OAAO,WACjC,YAAY,WACX,oBAAoB;;;;;QAFK,OAAO;QACjC,YAAY;QACX,oBAAoB;;;;;;;;mCAU7BA,gBAAc;;;mBAAdA,cAAc;;;;;;;IAAvB,SAASA,cAAc,CAC5BC,MAA4B,EAC5BC,IAAY,EACZC,UAA8B,EAC9B;QACA,IAAMC,IAAI,GAAGC,IAAAA,MAAO,QAAA,EAACH,IAAI,CAAC,AAAC;QAC3B,IAAMI,GAAG,GAAGC,IAAAA,MAAM,OAAA,EAAC,CAAC,CAAC,AAAC;QAEtB,IAAMC,OAAO,GAAGC,IAAAA,MAAO,QAAA,EAAC;mBAAMC,IAAAA,YAAY,QAAA,EAACR,IAAI,EAAEE,IAAI,EAAED,UAAU,CAAC;SAAA,EAAE;YAACD,IAAI;SAAC,CAAC,AAAC;QAE5E,IAAI,CAACM,OAAO,EAAE;YACZF,GAAG,CAACK,OAAO,EAAE,CAAC;QAChB,CAAC;QAEDC,IAAAA,MAAS,UAAA,EAACX,MAAM,EAAE;YAACK,GAAG,CAACK,OAAO;SAAC,CAAC,CAAC;IACnC,CAAC"}
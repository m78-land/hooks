{"version":3,"sources":["/Users/lixianjie/project/openSource/hooks/src/state/useQueue/useQueue.ts"],"sourcesContent":["import { AnyObject, createRandString, isArray, isNumber } from \"@m78/utils\";\nimport { useFn, useSelf, useSetState, useUpdate } from \"@m78/hooks\";\nimport _differenceBy from \"lodash/differenceBy\";\nimport { useEffect } from \"react\";\n\ntype IDType = string | number;\n\ninterface UseQueueConfig<ItemOption> {\n  /** 初始列表 */\n  list?: (ItemOption & UseQueueItem)[];\n  /** 默认项配置 */\n  defaultItemOption?: Partial<ItemOption & UseQueueItem>;\n  /** 是否默认为手动模式 */\n  defaultManual?: boolean;\n  /** 每次current变更时触发 */\n  onChange?: (current?: ItemOption & UseQueueItem) => void;\n}\n\ninterface UseQueueItem {\n  /** 自动模式时，如果传入此项，会在此延迟(ms)后自动切换到下一项 */\n  duration?: number;\n  /** 唯一id，如果未传入会由内部自动生成一个随机id */\n  id?: IDType;\n}\n\ninterface UseQueueItemWidthId extends UseQueueItem {\n  id: IDType;\n}\n\n/*\n * old[] <->  current  <-> list[]\n * */\n\nfunction useQueue<Item extends AnyObject = {}>(\n  {\n    defaultItemOption,\n    list = [],\n    defaultManual = false,\n    onChange,\n  } = {} as UseQueueConfig<Item>\n) {\n  /** 选项与用户扩展类型混合 */\n  type MixItem = Item & UseQueueItem;\n  type MixItemWithId = Item & UseQueueItemWidthId;\n\n  const self = useSelf({\n    /** 消息队列 */\n    list: [] as MixItemWithId[],\n    /** 历史记录 */\n    oldList: [] as MixItemWithId[],\n    /** 开启下一条的计时器 */\n    timer: null as any,\n    /** 设置计时器的时间 */\n    timerSetTime: null as number | null,\n    /** 暂停的时间 */\n    pauseTime: null as number | null,\n  });\n\n  const [state, setState] = useSetState({\n    /** 当前显示消息 */\n    current: null as MixItemWithId | null,\n    /** 是否暂停 */\n    manual: defaultManual,\n  });\n\n  const update = useUpdate();\n\n  // 清理\n  useEffect(() => clearTimer, []);\n\n  /**\n   * next()的实现版本，支持参数\n   * */\n  const nextIn = useFn((isPrev?: boolean) => {\n    clearTimer();\n\n    const nextCurrent = self.list[0] || null;\n\n    // 将当前项添加到历史\n    if (!isPrev && state.current) {\n      self.oldList.push(state.current);\n    }\n\n    if (!nextCurrent) {\n      setState({\n        current: null,\n      });\n      return;\n    }\n\n    // 移除新项\n    self.list.splice(0, 1);\n\n    // self.oldList.push(...del);\n\n    setState({\n      current: nextCurrent,\n    });\n\n    onChange?.(nextCurrent);\n\n    // 未暂停且配置了持续时间, 定时切换到下一条\n    if (isNumber(nextCurrent.duration) && !state.manual) {\n      self.timer = setTimeout(nextIn, nextCurrent.duration);\n      self.timerSetTime = Date.now();\n    }\n\n    // 如果切换过，暂停时间就没意义了，将其清除\n    self.pauseTime = null;\n  });\n\n  /**\n   * 切换到下一项\n   * */\n  const next = useFn(() => nextIn() /* 过滤参数 */);\n\n  /**\n   * 切换到上一项\n   * */\n  const prev = useFn(() => {\n    const lastOldInd = self.oldList.length - 1; // 最后一条是当前消息\n\n    const old = self.oldList.splice(lastOldInd, 1);\n\n    if (!old.length) return;\n\n    // 当前消息和上一条消息重新放回队列\n\n    state.current && self.list.unshift(state.current);\n\n    self.list.unshift(...old);\n\n    nextIn(true);\n  });\n\n  /**\n   * 推入一个或一组新项，如果当前没有选中项且非手动模式，自动执行next()\n   * @param opt - 要添加的新项，可以是一个单独的项配置或配置数组\n   * */\n  const push = useFn((opt: MixItem | MixItem[]) => {\n    if (isArray(opt)) {\n      const ls = opt.map((item) => ({\n        ...defaultItemOption,\n        id: createRandString(),\n        ...item,\n      }));\n      self.list.push(...ls);\n    } else {\n      self.list.push({ ...defaultItemOption, id: createRandString(), ...opt });\n    }\n\n    if (state.current || state.manual) update();\n    else next();\n  });\n\n  /**\n   * 跳转到指定id项，该项左侧所有项会被移到历史列表，右侧所有项会移到待执行列表\n   * */\n  const jump = useFn((id: IDType) => {\n    clearTimer();\n\n    const all = getAllList();\n\n    const cInd = findIndexById(id);\n\n    const leftList = all.slice(0, cInd);\n\n    const rightList = all.slice(cInd);\n\n    self.oldList = leftList;\n    self.list = rightList;\n    setState({\n      current: null,\n    });\n\n    nextIn();\n  });\n\n  /** 完全移除指定id或一组id的项, 如果你要关闭当前消息，应当使用next而不是remove，因为此方法会破坏队列的完整性 */\n  const remove = useFn((id: IDType | IDType[]) => {\n    const ids = isArray(id) ? id : [id];\n\n    if (!ids.length) return;\n\n    const diffList = (ls: MixItemWithId[]) =>\n      _differenceBy(\n        ls,\n        ids.map((item) => ({ id: item })),\n        (item) => item.id\n      );\n\n    self.oldList = diffList(self.oldList);\n\n    self.list = diffList(self.list);\n\n    if (state.current && ids.includes(state.current.id)) {\n      setState({\n        current: null,\n      });\n    } else {\n      update();\n    }\n  });\n\n  // 启动初始list\n  useEffect(() => {\n    if (list.length) {\n      push(list); // +执行next()\n    }\n  }, []);\n\n  /**\n   * 清空队列\n   * */\n  const clear = useFn(() => {\n    self.list = [];\n    self.oldList = [];\n    self.timer = null;\n    self.timerSetTime = null;\n    self.pauseTime = null;\n    clearTimer();\n    setState({\n      current: null,\n      manual: false,\n    });\n  });\n\n  /**\n   * 从自动模式切换为启用手动模式，暂停所有计时器\n   * */\n  const manual = useFn(() => {\n    if (state.manual) return;\n\n    setState({\n      manual: true,\n    });\n\n    clearTimeout(self.timer);\n\n    self.pauseTime = Date.now();\n  });\n\n  /**\n   * 从手动模式切换为自动模式, 如果包含暂停的计时器，会从暂停位置重新开始\n   * */\n  const auto = useFn(() => {\n    if (!state.manual) return;\n\n    setState({\n      manual: false,\n    });\n\n    const c = state.current;\n\n    // 如果当前有选中项，且包含计时器, 根据打断时间重新设置计时器\n    if (c) {\n      clearTimeout(self.timer);\n\n      // 包含必要参数，还原暂停时间\n      if (self.pauseTime && self.timerSetTime) {\n        const spend = self.pauseTime - self.timerSetTime;\n\n        if (isNumber(c.duration) && isNumber(spend)) {\n          self.timer = setTimeout(next, c.duration - spend);\n        }\n\n        // 使用默认时间\n      } else if (isNumber(c.duration)) {\n        self.timer = setTimeout(next, c.duration);\n      }\n    } else {\n      // 没有消息时重新启用队列\n      next();\n    }\n\n    self.pauseTime = null;\n  });\n\n  /**\n   * 指定id是否包含下一项, 不传id查当前项\n   * */\n  function hasNext(id?: IDType) {\n    if (!id && !state.current) {\n      return !!self.list.length;\n    }\n\n    const _id = id || state.current?.id;\n\n    if (!_id) return false;\n\n    const all = getAllList();\n    const ind = findIndexById(_id!);\n    return !!all[ind + 1];\n  }\n\n  /**\n   * 指定id是否包含上一项, 不传id查当前项\n   * */\n  function hasPrev(id?: IDType) {\n    let _id = id;\n\n    if (!_id && !state.current) return false;\n\n    if (!_id) {\n      _id = state.current?.id;\n    }\n\n    const all = getAllList();\n    const ind = findIndexById(_id!);\n    return !!all[ind - 1];\n  }\n\n  /**\n   * 查询指定id在列表中的索引\n   * */\n  function findIndexById(id: IDType) {\n    const all = getAllList();\n    return all.findIndex((item) => item.id === id);\n  }\n\n  /**\n   * 获取所有列表和当前项组成的数组, 历史和当前列表\n   * */\n  function getAllList() {\n    const ls: MixItemWithId[] = [];\n    ls.push(...self.oldList);\n\n    if (state.current) {\n      ls.push(state.current);\n    }\n\n    ls.push(...self.list);\n\n    return ls;\n  }\n\n  function clearTimer() {\n    if (self.timer) {\n      clearTimeout(self.timer);\n      self.timerSetTime = null;\n    }\n  }\n\n  return {\n    push,\n    prev,\n    next,\n    jump,\n    hasNext,\n    hasPrev,\n    clear,\n    findIndexById,\n    isManual: state.manual,\n    current: state.current,\n    auto,\n    manual,\n    list: getAllList(),\n    leftList: self.oldList,\n    rightList: self.list,\n    index: state.current ? findIndexById(state.current.id) : null,\n    remove,\n  };\n}\n\nexport { useQueue, UseQueueConfig, UseQueueItem };\n"],"names":["useQueue","defaultItemOption","list","defaultManual","onChange","hasNext","id","state","current","self","length","_id","all","getAllList","ind","findIndexById","hasPrev","findIndex","item","ls","push","oldList","clearTimer","timer","clearTimeout","timerSetTime","useSelf","pauseTime","useSetState","manual","setState","update","useUpdate","useEffect","nextIn","useFn","isPrev","nextCurrent","splice","isNumber","duration","setTimeout","Date","now","next","prev","lastOldInd","old","unshift","opt","isArray","map","createRandString","jump","cInd","leftList","slice","rightList","remove","ids","diffList","_differenceBy","includes","clear","auto","c","spend","isManual","index"],"mappings":"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"}
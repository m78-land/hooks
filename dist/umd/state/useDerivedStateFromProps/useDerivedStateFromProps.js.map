{"version":3,"sources":["/Users/lixianjie/project/openSource/hooks/src/state/useDerivedStateFromProps/useDerivedStateFromProps.ts"],"sourcesContent":["import { useState } from \"react\";\nimport { useUpdateEffect } from \"@m78/hooks\";\nimport _isEqualWith from \"lodash/isEqualWith\";\nimport { IsEqualCustomizer } from \"lodash\";\n\n/**\n *  实现类似getDerivedStateFromProps的效果，接收prop并将其同步为内部状态，\n *  当prop改变, 对prop和内部state执行_.isEqual,对比结果为false时，会更新内部值 (基础类型使用 === 进行对比，性能更高，当必须使用引用类型时，尽量保持结构简单，减少对比次数)\n *  @param prop - 需要派生为state的prop\n *  @param customizer - 可以通过此函数自定义对比方式, 如果相等返回 true，否则返回 false, 返回undefined时使用默认对比方式\n * */\nexport function useDerivedStateFromProps<T>(\n  prop: T,\n  customizer?: IsEqualCustomizer\n) {\n  const [state, setState] = useState<T>(prop);\n\n  useUpdateEffect(() => {\n    const isEqual = _isEqualWith(prop, state, customizer);\n    if (!isEqual) {\n      setState(prop);\n    }\n  }, [prop]);\n\n  return [state, setState] as const;\n}\n"],"names":["useDerivedStateFromProps","prop","customizer","useState","state","setState","useUpdateEffect","isEqual","_isEqualWith"],"mappings":"AAAA;+MAAyB,OAAO,WACA,YAAY,WACnB,oBAAoB;;;;;QAFpB,OAAO;QACA,YAAY;QACnB,oBAAoB;;;;;;;;mCAS7BA,0BAAwB;;;mBAAxBA,wBAAwB;;;;;;IAAjC,SAASA,wBAAwB,CACtCC,IAAO,EACPC,UAA8B,EAC9B;QACA,IAA0BC,GAAiB,kBAAjBA,IAAAA,MAAQ,SAAA,EAAIF,IAAI,CAAC,IAAA,EAApCG,KAAK,GAAcD,GAAiB,GAA/B,EAAEE,QAAQ,GAAIF,GAAiB,GAArB,AAAsB;QAE5CG,IAAAA,MAAe,gBAAA,EAAC,WAAM;YACpB,IAAMC,OAAO,GAAGC,IAAAA,YAAY,QAAA,EAACP,IAAI,EAAEG,KAAK,EAAEF,UAAU,CAAC,AAAC;YACtD,IAAI,CAACK,OAAO,EAAE;gBACZF,QAAQ,CAACJ,IAAI,CAAC,CAAC;YACjB,CAAC;QACH,CAAC,EAAE;YAACA,IAAI;SAAC,CAAC,CAAC;QAEX,OAAO;YAACG,KAAK;YAAEC,QAAQ;SAAC,CAAU;IACpC,CAAC"}
{"version":3,"sources":["/Users/lixianjie/project/openSource/hooks/src/ui/useCheck/useCheck.ts"],"sourcesContent":["import {\n  FormLikeWithExtra,\n  useFn,\n  useFormState,\n  useSelf,\n  UseFormStateConfig,\n} from \"@m78/hooks\";\nimport { isArray } from \"@m78/utils\";\nimport _difference from \"lodash/difference\";\nimport { useMemo } from \"react\";\n\nexport interface UseCheckConf<T, OPTION>\n  extends FormLikeWithExtra<T[], OPTION[]>,\n    UseFormStateConfig {\n  /** 选项数组 */\n  options?: OPTION[];\n  /** 所有禁用值 */\n  disables?: T[];\n  /** 当option子项为对象类型时，传入此项来决定从该对象中取何值作为实际的选项值  */\n  collector?: (item: OPTION) => T;\n  /** 如果当前value包含在options中不存在的值，会触发此函数，用于从服务器或其他地方拉取不存在的选项 */\n  notExistValueTrigger?(val: T[]): void;\n}\n\n/** checked可以允许存在options中不存在的值， 所有选中, 局部选中都只针对传入选项中存在的值来确定 */\nexport interface UseCheckReturns<T, OPTION> {\n  /** 部分值被选中(只针对存在于options中的选项) */\n  partialChecked: boolean;\n  /** 是否全部选中(只针对存在于options中的选项) */\n  allChecked: boolean;\n  /** 没有任何值被选中 */\n\n  noneChecked: boolean;\n  /** 被选中值, 存在collector时所有check项都会先走collector */\n  checked: T[];\n  /** 被选中的原始值，不走collector，未传collector时与check表现一致 */\n  originalChecked: OPTION[];\n  /** 检测值是否被选中 */\n  isChecked: (val: T) => boolean;\n  /** 检测值是否被禁用 */\n  isDisabled: (val: T) => boolean;\n  /** 选中传入的值 */\n  check: (val: T) => void;\n  /** 取消选中传入的值 */\n  unCheck: (val: T) => void;\n  /** 选择全部值 */\n  checkAll: () => void;\n  /** 取消选中所有值 */\n  unCheckAll: () => void;\n  /** 反选, 返回反选后的值 */\n  toggle: (val: T) => boolean | undefined;\n  /** 反选所有值 */\n  toggleAll: () => void;\n  /** 一次性设置所有选中的值, 不影响禁用项 */\n  setChecked: (nextChecked: T[]) => void;\n  /** 指定值并设置其选中状态 */\n  setCheckBy: (val: T, isChecked: boolean) => void;\n  /** 以列表的形式添加选中项 */\n  checkList: (checkList: T[]) => void;\n  /** 以列表的形式移除选中项 */\n  unCheckList: (checkList: T[]) => void;\n}\n\nexport function useCheck<T, OPTION = T>(\n  conf: UseCheckConf<T, OPTION>\n): UseCheckReturns<T, OPTION> {\n  const { options = [], disables = [], collector, notExistValueTrigger } = conf;\n\n  /* ⚠ 用最少的循环实现功能，因为option可能包含巨量的数据 */\n  const self = useSelf({\n    /** 存放所有选项的字典 */\n    optMap: {} as { [key: string]: OPTION },\n    /** 存放所有已选值的字典 */\n    valMap: {} as { [key: string]: { v: T; o: OPTION } },\n    /** 存放checked中存在，但是options中不存在的值, used为是否已通过 */\n    notExistVal: {} as { [key: string]: { used: boolean; v: T } },\n  });\n\n  const triggerKey = conf.triggerKey || \"onChange\";\n\n  const [checked, setChecked] = useFormState<T[], OPTION[]>(\n    {\n      ...conf,\n      // 截获onChange并自定义更新逻辑\n      [triggerKey](val: T[]) {\n        // valMapSync(val); 强控制时在这里同步会有问题，统一转移到effect中\n        conf[triggerKey as \"onChange\"]?.(val, getCheckedOptions(val));\n      },\n    },\n    [],\n    {\n      ...conf,\n    }\n  );\n\n  /** 提取所有选项为基础类型值, 基础值数组操作更方便 */\n  const items = useMemo(() => {\n    return collector\n      ? options.map((item) => {\n          const v = collector(item);\n          self.optMap[String(v)] = item;\n          return collector(item);\n        })\n      : options.map<T>((item: any) => {\n          self.optMap[String(item)] = item;\n          return item;\n        });\n  }, [options]);\n\n  /** 初始化触发valMap */\n  useMemo(() => {\n    valMapSync(checked);\n  }, [checked]);\n\n  const isChecked = useFn((val: T) => {\n    const v: any = val;\n    return !!self.valMap[v] || !!self.notExistVal[v];\n  });\n\n  const isDisabled = useFn((val: T) => disables.includes(val));\n\n  const check = useFn((val: T) => {\n    if (isDisabled(val)) return;\n    if (!isChecked(val)) {\n      setChecked([...checked, val]);\n    }\n  });\n\n  const unCheck = useFn((val: T) => {\n    if (isDisabled(val)) return;\n    if (!isChecked(val)) return;\n    const index = checked.indexOf(val);\n    if (index !== -1) {\n      const temp = [...checked];\n      temp.splice(index, 1);\n      setChecked(temp);\n    }\n  });\n\n  const checkAll = useFn(() => {\n    // 只选中当前包含的选项\n    setChecked(getEnables());\n  });\n\n  const unCheckAll = useFn(() => {\n    setChecked(getEnables(false));\n  });\n\n  const toggle = useFn((val: T) => {\n    if (isDisabled(val)) return;\n\n    const _isC = isChecked(val);\n\n    if (!_isC) {\n      setChecked([...checked, val]);\n    } else {\n      const index = checked.indexOf(val);\n      const newArray = checked.slice();\n      newArray.splice(index, 1);\n      setChecked(newArray);\n    }\n    return !_isC;\n  });\n\n  const toggleAll = useFn(() => {\n    const reverse = items.filter((item) => {\n      const _isDisabled = isDisabled(item);\n      const _isChecked = isChecked(item);\n      if (_isDisabled) return _isChecked; // 如果禁用则返回、\n      return !_isChecked;\n    });\n    setChecked(reverse);\n  });\n\n  const checkList = useFn((list: T[]) => {\n    if (!isArray(list)) return;\n    if (!list.length) return;\n    // 排除禁用项和已选中项\n    const newList = list.filter((item) => {\n      if (isDisabled(item)) return false;\n      if (isChecked(item)) return false; // isChecked消耗比isDisabled高，所以用`||`判断\n      return true;\n    });\n\n    setChecked((prev) => [...prev, ...newList]);\n  });\n\n  const unCheckList = useFn((removeList: T[]) => {\n    if (!isArray(removeList)) return;\n    if (!removeList.length) return;\n    // 排除禁用项和未选中项\n    const rmList = removeList.filter((item) => {\n      if (isDisabled(item)) return false;\n      if (!isChecked(item)) return false;\n      return true;\n    });\n\n    setChecked((prev) => {\n      return _difference(prev, rmList);\n    });\n  });\n\n  const setCheck = useFn((nextChecked: T[]) => {\n    // 只选中列表中未被禁用的项\n    const extra = nextChecked.filter((item) => {\n      if (isDisabled(item)) {\n        return isChecked(item);\n      }\n      return true;\n    });\n    setChecked([...extra]);\n  });\n\n  const setCheckBy = useFn((val: T, _isChecked: boolean) => {\n    if (isDisabled(val)) return;\n    _isChecked ? check(val) : unCheck(val);\n  });\n\n  /** 获取可用选项，禁用项会以原样返回， 传入false时，返回所有未禁用项 */\n  function getEnables(isCheck = true) {\n    return items.filter((item) => {\n      const _isDisabled = isDisabled(item);\n      if (_isDisabled) {\n        return isChecked(item);\n      }\n      return isCheck;\n    });\n  }\n\n  /** 获取所有已选中的选项 */\n  function getCheckedOptions(_checked: T[]) {\n    if (!collector) return _checked as unknown as OPTION[];\n\n    const temp: OPTION[] = [];\n\n    _checked.forEach((item) => {\n      const c = self.optMap[String(item)];\n      if (c) {\n        temp.push(c);\n      }\n    });\n\n    return temp;\n  }\n\n  /** 判断是否局部选中, 是否所有选中 */\n  function getCheckStatus() {\n    let checkLen = 0;\n    const maxLength = items.length;\n    items.forEach((item) => {\n      if (isChecked(item)) {\n        checkLen++;\n      }\n    });\n    return {\n      /** 部分值被选中 */\n      partialChecked: checkLen > 0 && checkLen !== maxLength,\n      /** 是否全部选中 */\n      allChecked: checkLen === maxLength,\n    };\n  }\n\n  /** 同步valMap, 触发notExistVal  */\n  function valMapSync(_checked: T[]) {\n    if (!isArray(_checked)) return; // 在rc-form库中使用时，热更新会报错\n\n    const prevNotExits = { ...self.notExistVal };\n\n    self.valMap = {};\n    self.notExistVal = {};\n\n    _checked.forEach((item) => {\n      const strItem = String(item);\n\n      const c = self.optMap[strItem];\n\n      if (c) {\n        self.valMap[strItem] = {\n          v: item,\n          o: self.optMap[strItem],\n        };\n      } else {\n        const prev = prevNotExits[strItem];\n\n        self.notExistVal[strItem] = {\n          used: prev ? prev.used : false,\n          v: item,\n        };\n      }\n    });\n\n    // 通知选中但不存在的选项到notExistValueTrigger\n    if (notExistValueTrigger) {\n      const notOptionValues: T[] = [];\n\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      Object.entries(self.notExistVal).forEach(([_, v]) => {\n        if (!v.used) {\n          v.used = true;\n          notOptionValues.push(v.v);\n        }\n      });\n\n      notOptionValues.length && notExistValueTrigger(notOptionValues);\n    }\n  }\n\n  /**\n   * checked可以允许存在options中不存在的值， 所有选中, 局部选中都只针对传入选项来确定 */\n  return {\n    ...getCheckStatus(),\n    checked,\n    originalChecked: getCheckedOptions(checked),\n    noneChecked: checked.length === 0,\n    isChecked,\n    isDisabled,\n    check,\n    unCheck,\n    checkAll,\n    unCheckAll,\n    toggle,\n    toggleAll,\n    setChecked: setCheck,\n    setCheckBy,\n    checkList,\n    unCheckList,\n  };\n}\n"],"names":["useFn","useFormState","useSelf","isArray","_difference","useMemo","useCheck","conf","getEnables","isCheck","items","filter","item","_isDisabled","isDisabled","isChecked","getCheckedOptions","_checked","collector","temp","forEach","c","self","optMap","String","push","getCheckStatus","checkLen","maxLength","length","partialChecked","allChecked","valMapSync","prevNotExits","notExistVal","valMap","strItem","v","o","prev","used","notExistValueTrigger","notOptionValues","Object","entries","_","options","disables","triggerKey","val","checked","setChecked","map","includes","check","unCheck","index","indexOf","splice","checkAll","unCheckAll","toggle","_isC","newArray","slice","toggleAll","reverse","_isChecked","checkList","list","newList","unCheckList","removeList","rmList","setCheck","nextChecked","extra","setCheckBy","originalChecked","noneChecked"],"mappings":"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"}
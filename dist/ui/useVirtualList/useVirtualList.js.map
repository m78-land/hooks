{"version":3,"sources":["/Users/lixianjie/project/openSource/hooks/src/ui/useVirtualList/useVirtualList.ts"],"sourcesContent":["import { RefObject, useEffect, useMemo, useRef } from \"react\";\nimport { isFunction } from \"@m78/utils\";\nimport {\n  createEvent,\n  getRefDomOrDom,\n  useFn,\n  useScroll,\n  UseScrollMeta,\n  useSelf,\n  useSetState,\n} from \"@m78/hooks\";\nimport _debounce from \"lodash/debounce\";\n\nexport interface VirtualListOption<Item> {\n  /** 需要进行虚拟滚动的列表 */\n  list: Item[];\n  /** 每项的尺寸 */\n  size: number | ((item: Item, index: number) => number);\n  /** 1 | 滚动区域两侧预渲染的节点数 */\n  overscan?: number;\n  /**\n   * 项的唯一key, 建议始终明确的指定key, 除非:\n   * - 列表永远不会排序或更改\n   * - 不需要使用keepAlive等高级特性\n   * */\n  key?: (item: Item, index: number) => string;\n\n  /** 返回true的项将始终被渲染 */\n  keepAlive?: (item: Item, index: number) => boolean;\n  /** 一个可选配置，默认情况下，高度从containerTarget获取，如果containerTarget没有实际高度或需要实现\"最大高度\"效果时，使用此配置 */\n  height?: number;\n  /** 是否禁用, 禁用时list为[]且不监听任何事件 */\n  disabled?: boolean;\n  /** 预留空间, 需要插入其他节点到列表上/下方时传入此项，值为插入内容的总高度 */\n  space?: number;\n  /** 当有一个已存在的ref或html时，用来代替returns.containerRef获取滚动容器 */\n  containerTarget?: HTMLElement | RefObject<HTMLElement>;\n  /** 当有一个已存在的ref或html时，用来代替用来代替returns.wrapRef获取包裹容器 */\n  wrapRef?: HTMLElement | RefObject<HTMLElement>;\n}\n\nexport type VirtualList<Item> = {\n  /** 该项索引 */\n  index: number;\n  /** 该项的key, 如果未配置key(), 则等于index */\n  key: string;\n  /** 该项的数据 */\n  data: Item;\n  /** 应该应位于的位置 */\n  position: number;\n  /** 改项的尺寸 */\n  size: number;\n}[];\n\ninterface State<Item> {\n  /** 虚拟列表 */\n  list: VirtualList<Item>;\n  /** 是否处于滚动状态中 */\n  scrolling: boolean;\n}\n\nexport interface VirtualListRenderProps<Item> {\n  children: (state: State<Item>) => JSX.Element | any;\n}\n\nexport function useVirtualList<Item = any>(option: VirtualListOption<Item>) {\n  const {\n    list,\n    size,\n    overscan = 1,\n    key,\n    space = 0,\n    keepAlive,\n    containerTarget,\n    disabled,\n    height: optionHeight,\n  } = option;\n\n  const wrapRef = useRef<any>(null!);\n\n  // 统一通知Render更新状态\n  const updateEvent = useMemo(\n    () => createEvent<(state: Partial<State<Item>>) => void>(),\n    []\n  );\n\n  const self = useSelf({\n    scrolling: false,\n  });\n\n  // 格式化list为虚拟list格式，并获取计算得到的总高度, 禁用时两个值分别为[]和0\n  const [fmtList, height] = useMemo(() => {\n    let h = 0;\n\n    if (disabled) return [[], h] as [VirtualList<Item>, number];\n\n    const ls: VirtualList<Item> = list.map((item, index) => {\n      const _size = getSize(item, index);\n      h += _size;\n\n      return {\n        data: item,\n        index,\n        key: getKey(item, index),\n        position: h,\n        size: _size,\n      };\n    });\n\n    return [ls, h] as const;\n  }, [list, disabled]);\n\n  const scroller = useScroll<any>({\n    el: containerTarget,\n    throttleTime: 0,\n    onScroll: handleScroll,\n  });\n\n  /** 使用render组件来减少hook对消费组件的频繁更新 */\n  const Render = useMemo(\n    () =>\n      ({ children }: VirtualListRenderProps<Item>) => {\n        const [state, setState] = useSetState<State<Item>>({\n          list: [],\n          scrolling: false,\n        });\n\n        updateEvent.useEvent(setState);\n\n        return children(state);\n      },\n    []\n  );\n\n  // 检测必须的dom是否存在，不存在时抛异常\n  useEffect(() => {\n    if (disabled) return;\n    if (!getRefDomOrDom(option.wrapRef, wrapRef) || !scroller.ref.current) {\n      throw Error(\"useVirtualList(...) -> wrap or container is not gets\");\n    }\n  }, [disabled]);\n\n  // 设置容器节点为可滚动和设置滚动的首帧位置\n  useEffect(() => {\n    if (disabled) return;\n    handleScroll(scroller.get(), true);\n    scroller.ref.current && (scroller.ref.current.style.overflowY = \"auto\");\n  }, [disabled, fmtList, height]);\n\n  // 通知滚动结束\n  const emitScrolling = useFn(\n    () => {\n      self.scrolling = false;\n      updateEvent.emit({\n        scrolling: false,\n      });\n    },\n    (fn) => _debounce(fn, 100)\n  );\n\n  /** 核心混动逻辑 */\n  function handleScroll(meta: UseScrollMeta, skipScrollingEmit?: boolean) {\n    if (disabled) return;\n\n    // 通知滚动开始\n    if (!skipScrollingEmit && !self.scrolling) {\n      self.scrolling = true;\n      updateEvent.emit({\n        scrolling: true,\n      });\n    }\n\n    !skipScrollingEmit && emitScrolling();\n\n    // keep列表需要实时计算\n    let keepAliveList: VirtualList<Item> = [];\n    const wrapEl = getRefDomOrDom(option.wrapRef, wrapRef);\n\n    if (!wrapEl || !meta.el) return;\n\n    if (keepAlive) {\n      keepAliveList = fmtList.filter((item, index) =>\n        keepAlive(item.data, index)\n      );\n    }\n\n    // 开始索引\n    let start = 0;\n\n    // 计算开始索引\n    for (let i = 0; i < fmtList.length; i++) {\n      const position = fmtList[i].position;\n\n      start = i;\n      if (position > meta.y) break;\n    }\n\n    // 计算结束索引\n    const contActualHeight = optionHeight || meta.el.offsetHeight;\n    let contHeight = 0;\n    let end = start;\n\n    for (let i = 0; i < fmtList.length; i++) {\n      if (contHeight > contActualHeight || end >= fmtList.length) break;\n\n      contHeight += fmtList[end].size;\n      end += 1;\n    }\n\n    if (overscan) {\n      const [nextStart, nextEnd] = getOverscanSize(start, end);\n      start = nextStart;\n      end = nextEnd;\n    }\n\n    const nextList: VirtualList<Item> = fmtList.slice(start, end);\n\n    if (keepAliveList.length) {\n      keepAliveList.forEach((item) => {\n        const has = nextList.find((it) => it.key === item.key);\n\n        if (!has) {\n          if (item.index < start) nextList.unshift(item);\n          else nextList.push(item);\n        }\n      });\n    }\n\n    // 顶部偏移\n    let top = 0;\n\n    for (let i = 0; i < start; i++) {\n      top += fmtList[i].size;\n    }\n\n    const h = height - top + space;\n    const t = `${top}px`;\n\n    // 高度为有效数值时才设置，这样list为空时内容高度就不会为0了\n    const hStr = h > space ? `${h}px` : undefined;\n\n    // 设置wrap样式\n    if (wrapEl.style.cssText !== undefined) {\n      wrapEl.style.cssText = `margin-top: ${t};height: ${hStr};`;\n    } else {\n      wrapEl.style.marginTop = t;\n      if (hStr) wrapEl.style.height = hStr;\n    }\n\n    updateEvent.emit({ list: nextList });\n  }\n\n  /** 将开始和结束索引根据overscan进行修正，参数3会返回顶部应减少的偏移 */\n  function getOverscanSize(start: number, end: number) {\n    const nextStart = Math.max(start - overscan, 0);\n\n    const nextEnd = Math.min(\n      /* 索引为0时不添加 */\n      end + overscan /* slice是尾闭合的，所以要多取一位 */,\n      fmtList.length\n    );\n\n    return [nextStart, nextEnd] as const;\n  }\n\n  function getSize(item: Item, index: number) {\n    if (!isFunction(size)) return size;\n    return size(item, index);\n  }\n\n  function getKey(item: Item, index: number) {\n    if (!isFunction(key)) return String(index);\n    return key(item, index);\n  }\n\n  return {\n    containerRef: scroller.ref,\n    wrapRef,\n    Render,\n  };\n}\n"],"names":["useEffect","useMemo","useRef","isFunction","createEvent","getRefDomOrDom","useFn","useScroll","useSelf","useSetState","_debounce","useVirtualList","option","handleScroll","meta","skipScrollingEmit","disabled","self","scrolling","updateEvent","emit","emitScrolling","keepAliveList","wrapEl","wrapRef","el","keepAlive","fmtList","filter","item","index","data","start","i","length","position","y","contActualHeight","optionHeight","offsetHeight","contHeight","end","size","overscan","getOverscanSize","nextStart","nextEnd","nextList","slice","forEach","has","find","it","key","unshift","push","top","h","height","space","t","hStr","undefined","style","cssText","marginTop","list","Math","max","min","getSize","getKey","String","containerTarget","ls","map","_size","scroller","throttleTime","onScroll","Render","children","state","setState","useEvent","ref","current","Error","get","overflowY","fn","containerRef"],"mappings":"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"}